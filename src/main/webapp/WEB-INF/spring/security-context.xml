<?xml version="1.0" encoding="UTF-8"?>
<!-- 기본 네임스페이스 변경 -->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- #7.1 암호화 처리 빈 등록 --> <!-- 기본 namespace를 security으로 해놔서 접두로 beans를 붙여주어야한다. -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<!-- security 는 root-context에서 관리한다. -->
	
	<!-- #7.3 인증/권한 관련 설정 -->
	<http security="none" pattern="/resources/**"/> <!-- 해당 주소로는 security적용 안함 -->
	<!-- intercept url은 구체적인 것 => 일반적인 설정 순으로 작동한다. -->
	<http auto-config="true">
		<!-- permitAll ,hasAnyRole(A,B,C), isAnonymous(), isAuthenticated(), hasRole(A) -->

		<!-- 
			login-page : 로그인 폼을 요청. 작성필요
			login-processing-url : security로그인 처리. controller에 작성 불필요.(자동처리됨)
			default-target-url="/" : 기본값 root
			always-use-default-target="false" -> false시 무조건 root가 아닌 들어가려던 페이지로 전달해줌. true는 default target으로 다 날려줌.
			username-parameter : 기본값 username
			password-parameter : 기본값 password
		 -->
		<form-login 
			login-page="/member/memberLogin.do" 
			login-processing-url="/member/memberLogin.do"
			default-target-url="/" 
			always-use-default-target="false"
			username-parameter="memberId" 
			password-parameter="password"
			authentication-success-forward-url="/member/memberLoginSuccess.do"			
			/>
		
		<!-- 이거 controller에 로그아웃 안만들어도 됨 -> 이 logoutUrl을 실행하면 로그아웃을 수행해줌. 성공시 success으로 날림 -->
		<logout logout-url="/member/memberLogout.do" logout-success-url="/"/>		
			<!-- 
				Cross Site Request Forgery공격대비 설정.
				- 사용자의 특정권한을 이용하여 공격자의 의도된 행동을 실행하게 만드는 공격방법
				- 특정 사용자의 권한 수정, 등록/수정/삭제 
			-->
		<csrf disabled="false"/> <!-- 기본이 false --> 
		
		<!-- rememberme -->
		<remember-me data-source-ref="dataSource"	token-validity-seconds="1209600"/>
		
		<!-- 403 accessDenied.do가 뜨는 경우 -->
		<access-denied-handler error-page="/error/accessDenied.do" />
		
	</http>
	
	<authentication-manager>
		<authentication-provider user-service-ref="memberSecurityService">
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<context:component-scan base-package="com.kh.security"/>
	
</beans:beans>
